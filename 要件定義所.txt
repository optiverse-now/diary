1. 機能要件

1.1 ユーザー管理機能
ユーザー登録

ログイン/ログアウト

プロフィール管理（名前、メールアドレス）

1.2 日記機能
日記の作成

日記の編集

日記の一覧表示

日記の詳細表示

気分タグの追加（複数の気分タグを選択可能。過去に使用した気分タグをプルダウンで選択できる。テキスト入力も可能。入力されたタグは、既に存在する場合は既存のタグが利用され、存在しない場合は新規追加される。テキスト入力時には、過去に使用したタグがオートコンプリートで候補表示される。）

カテゴリータグの追加（複数のカテゴリータグを選択可能。過去に使用したカテゴリータグをプルダウンで選択できる。テキスト入力も可能。入力されたタグは、既に存在する場合は既存のタグが利用され、存在しない場合は新規追加される。テキスト入力時には、過去に使用したタグがオートコンプリートで候補表示される。）


2. データベースER図

erDiagram
    User ||--o{ Diary : "writes"
    Diary ||--o{ DiaryMood : "has"
    Diary ||--o{ DiaryTag : "has"
    Mood ||--o{ DiaryMood : "belongs to"
    Tag ||--o{ DiaryTag : "belongs to"

    User {
        string id PK
        string name
        string email
        string password HASHED
        datetime createdAt
        datetime updatedAt
    }

    Diary {
        string id PK
        string title
        string content
        datetime createdAt
        datetime updatedAt
        string userId FK
    }

    DiaryMood {
        string diaryId FK
        string moodId FK
    }

    DiaryTag {
        string diaryId FK
        string tagId FK
    }

    Mood {
        string id PK
        string name UNIQUE
    }

    Tag {
        string id PK
        string name UNIQUE
    }


3. API仕様書（OpenAPI 3.0）
openapi: 3.0.0
info:
  title: 日記アプリケーションAPI
  version: 1.0.0

paths:
  /api/auth/signup:
    post:
      summary: ユーザー登録
      tags: [認証]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                name:
                  type: string
              required:
                - email
                - password
                - name
      responses:
        '201':
          description: ユーザー登録成功
        '400':
          description: リクエストが不正

  /api/auth/signin:
    post:
      summary: ログイン
      tags: [認証]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWTトークン
        '400':
          description: リクエストが不正
        '401':
          description: 認証情報が不正

  /api/auth/signout:
    post:
      summary: ログアウト
      tags: [認証]
      security:
        - bearerAuth: []
      responses:
        '204':
          description: ログアウト成功

  /api/diaries:
    get:
      summary: ログインユーザーの日記一覧取得
      tags: [日記]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 日記一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Diary'
        '401':
          description: 認証エラー
    post:
      summary: 日記作成
      tags: [日記]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                moodIds:
                  type: array
                  items:
                    type: string
                tagIds:
                  type: array
                  items:
                    type: string
              required:
                - title
                - content
                - moodIds
                - tagIds
      responses:
        '201':
          description: 日記作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diary'
        '400':
          description: リクエストが不正
        '401':
          description: 認証エラー

  /api/diaries/{id}:
    get:
      summary: ログインユーザーの日記詳細取得
      tags: [日記]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 日記詳細取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diary'
        '401':
          description: 認証エラー
        '404':
          description: 日記が見つからない
    put:
      summary: 日記更新
      tags: [日記]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                moodIds:
                  type: array
                  items:
                    type: string
                tagIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: 日記更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diary'
        '400':
          description: リクエストが不正
        '401':
          description: 認証エラー
        '404':
          description: 日記が見つからない

  /api/moods:
    get:
      summary: 気分タグ一覧取得（過去に使用されたものを含む）
      tags: [気分タグ]
      responses:
        '200':
          description: 気分タグ一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mood'

  /api/tags:
    get:
      summary: カテゴリータグ一覧取得（過去に使用されたものを含む）
      tags: [カテゴリータグ]
      responses:
        '200':
          description: カテゴリータグ一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Diary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        moods:
          type: array
          items:
            $ref: '#/components/schemas/Mood'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Mood:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: string
        name:
          type: string